* ---1---
* replace bindings by default in let
* add splat
** add .. macro
** [1 2 3]..
** use pred in parse_id
* add squash
** [..]
** trap in wrapper around parse_group
* add bench macro
** print run time
* ---2---
* emit +/- as inc/dec if lit arg
* add file loading to alang
** load all args
* add String type/parser
* add str binding
* add Chan
** add Chan type
** use deque
** finish thread test
*** prod/cons/queue
* add Iter type
** add types::iter method
** add Iter type
** add Iter op
** add Next op
*** peek iter && push next value or NIL
** add Stack iter
* add trace support
* ---N---
* add tasks
** use Pause to switch
** separate stacks
** add StartTask op
** add Snooze op

let fib sub(
  if (cp .< 2) _ (
    .- 1 cp recall
    .+ (sw .- 1 recall)
  )
)

fib(20)

let fib sub(
  if (cp .< 2) _ (
    + (.- 1 cp recall)
      (sw .- 1 recall)
  )
)
